<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.appserver.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.appserver.model.entity.User">
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="pass_word" jdbcType="VARCHAR" property="passWord" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="age" jdbcType="TINYINT" property="age" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_status" jdbcType="BIT" property="userStatus" />
  </resultMap>

  <select id="checkUserinfo" parameterType="com.example.appserver.model.entity.User" resultMap="BaseResultMap">
    select * from user
    where 1=1
    <if test="nickName! = null and nickNamr !=''">and nick_name = #{nickName}</if>
    <if test="email ! = null and email !=''">and email = #{email}</if>
    <if test="phone != null and phone != ''">and phone = #{phone}</if>
    <if test="passWord!=null and passWord !=''">and pass_word = #{passWord}</if>
  </select>

  <select id="registCheck" parameterType="com.example.appserver.model.req.UserAuthReq" resultType="Integer">
    select count(1) from user
    where 1=1
    <if test="nickName != null and nickName !=''">and nick_name = #{nickName}</if>
    <if test="email != null and email !=''">and email = #{email}</if>
    <if test="phone != null and phone != ''">and phone = #{phone}</if>
  </select>


  <insert id="insertSelective" parameterType="com.example.appserver.model.req.UserAuthReq">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="passWord != null">
        pass_word,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null">
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="age != null">
        #{age,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=BIT},
      </if>
    </trim>
  </insert>
</mapper>