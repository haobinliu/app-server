<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.appserver.mapper.ArticleCommentMapper">
  <resultMap id="BaseResultMap" type="com.example.appserver.model.entity.ArticleComment">
    <id column="article_comment_id" jdbcType="INTEGER" property="articleCommentId" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_valid" jdbcType="TINYINT" property="isValid" />
    <result column="favor_count" jdbcType="INTEGER" property="favorCount" />
  </resultMap>
  <sql id="Base_Column_List">
    article_comment_id, article_id, user_id, nick_name, comment_content, create_time, 
    is_valid, favor_count
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article_comment
    where article_comment_id = #{articleCommentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article_comment
    where article_comment_id = #{articleCommentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.appserver.model.entity.ArticleComment">
    insert into article_comment (article_comment_id, article_id, user_id, 
      nick_name, comment_content, create_time, 
      is_valid, favor_count)
    values (#{articleCommentId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{nickName,jdbcType=VARCHAR}, #{commentContent,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{isValid,jdbcType=TINYINT}, #{favorCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.appserver.model.entity.ArticleComment">
    insert into article_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleCommentId != null">
        article_comment_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="favorCount != null">
        favor_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleCommentId != null">
        #{articleCommentId,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=TINYINT},
      </if>
      <if test="favorCount != null">
        #{favorCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.appserver.model.entity.ArticleComment">
    update article_comment
    <set>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=TINYINT},
      </if>
      <if test="favorCount != null">
        favor_count = #{favorCount,jdbcType=INTEGER},
      </if>
    </set>
    where article_comment_id = #{articleCommentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.appserver.model.entity.ArticleComment">
    update article_comment
    set article_id = #{articleId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      nick_name = #{nickName,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_valid = #{isValid,jdbcType=TINYINT},
      favor_count = #{favorCount,jdbcType=INTEGER}
    where article_comment_id = #{articleCommentId,jdbcType=INTEGER}
  </update>
</mapper>